name: Notify on Push

on:
  push:
    branches:
      - main
      - uat
  pull_request:
    branches:
      - main
    types: [opened, reopened]

jobs:
  build-notify:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Check out the repository for push
        if: github.event_name == 'push'
        uses: actions/checkout@v3

      - name: Check out the repository for pull request
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }} #obtiene el SHA del commit en la cabeza del PR

      - name: Get commit details
        id: get_commit_details
        run: |
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>')" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Get detail user pushing
        run: |
          echo "Usuario: ${{ env.COMMIT_AUTHOR }} subio cambios, commit: ${{ env.COMMIT_MESSAGE }}"

      - name: Send notification email
        run: |
          echo "Sending email notification..."
          sudo apt-get install -y ssmtp
          echo "root=postmaster" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "mailhub=${{ secrets.SMTP_SERVER }}:${{ secrets.SMTP_PORT }}" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "AuthUser=${{ secrets.SMTP_USERNAME }}" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "AuthPass=${{ secrets.SMTP_PASSWORD }}" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "UseTLS=YES" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "UseSTARTTLS=YES" | sudo tee -a /etc/ssmtp/ssmtp.conf
          echo "FromLineOverride=YES" | sudo tee -a /etc/ssmtp/ssmtp.conf

          echo -e "To: ${{ secrets.EMAIL_TO }}\nSubject: New Push to ${{ github.ref_name }}\n\nCommit by: ${{ env.COMMIT_AUTHOR }}\nMessage: ${{ env.COMMIT_MESSAGE }}" | ssmtp ${{ secrets.EMAIL_TO }}

  #######################################################
  # Automatic merge to develop branch
  #######################################################
  merge-dev-into-main:
    runs-on: ubuntu-latest
    needs: build-notify
    if: ${{ success() }}
    #[For a specific job, you can use jobs.<job_id>.permissions to modify the default permissions granted to the GITHUB_TOKEN](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs)
    permissions:
      contents: write
      pull-requests: write
    steps:
      ########################################################
      # 1- Dowload source code
      #Only a single commit is fetched by default, for the ref/SHA that triggered the workflow, Set fetch-depth: 0 to fetch all history for all branches and tags
      ########################################################
      - uses: actions/checkout@v3
        with:
          #Dowload the code from destination branch (develop)
          ref: ${{ github.base_ref }}
          fetch-depth: 0

      # ########################################################
      # # 2- Merge to development branch
      # ########################################################
      - name: Merge to development branch
        if: ${{ success() }}
        run: |
          git config --global user.email "${{secrets.GLOB_USEREMAIL}}"
          git config --global user.name "${{secrets.GLOB_USERNAME}}" 
          #Using -m "mesage" on merge command ins mandatori here in order to avoid open a text editor to write a commit message
          git merge --no-ff --verbose origin/${{ github.event.pull_request.head.ref }} -m "Merge pull request #${{ github.event.number }}"

      ########################################################
      # 3- Push changes after merge
      ##########################################################

      - name: Push changes after merge
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.base_ref }}
